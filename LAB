#kubectl 명령어 자동 완성

echo "source <(kubectl completion bash)" >> ~/.bashrc

#설치
sudo curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh

#Dockerfile
FROM ubuntu:latest
LABEL maintainer peter@google.com
RUN apt-get update -y
RUN apt-get install -y python-pip python-dev build-essential
COPY . /app
WORKDIR /app
RUN pip install -y requirements.txt
EXPOSE 5000
ENTRYPOINT ["python"]
CMD ["application.py"]

#Requirements.txt
mysql-connector-python

#라이브러리 설치
sudo apt-get install -y python3 python3-pip
pip3 install tornado

python3 web-server.py &
curl localhost:8888
sudo docker build -t py-web-server:v1 .
sudo docker run -d -p 8888:8888 --name py-web-server -h my-web-server py-web-server:v1
sudo docker run -d --name GCP-Webserver -p 8888:8888 -h my-web-server py-web-server:v1

sudo docker pull willnz/py-web-server:v1

sudo docker run -d -p 8888:8888 -h my-web-server willnz/py-web-server:v1

#git 주소
git clone https://github.com/sminorff/docker.git
git clone https://github.com/googlecodelabs/orchestrate-with-kubernetes.git

#Docker Compose 설치
sudo curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose
sudo docker-compose --version

#Bitnami Wordpress 설치
sudo curl -LO https://raw.githubusercontent.com/bitnami/bitnami-docker-wordpress/master/docker-compose.yml
sudo docker-compose up

#Kubernetes 설치
gcloud config set compute/zone us-central1-a
gcloud container clusters create lab01 --num-nodes 3 --scopes "https://www.googleapis.com/auth/projecthosting,storage-rw"

#kubectl 명령어
kubectl version
kubectl cluster-info
kubectl get node
kubectl get node -owide
kubectl run nginx --image=nginx:1.10.0
kubectl delete pod [pod name]
kubectl get pods
kubectl get deploy
kubectl get svc
kubectl describe pod [pod name]
kubectl expose deployment nginx --port 80 --type LoadBalancer
kubectl exec -it [pod name] sh
sudo apt-get install -y procps
cd /usr/share/nginx/html
ls
kubectl get pods --all-namespaces
kubectl get pod {pod_name} -o json| jq '.status.containerStatuses'
#클러스터 지정 명령어
gcloud container clusters get-credentials lab01 --zone us-central1-a --project peter-20181105
#yaml 파일을 이용한 pod 생성
kubectl create -f pod2-1.yaml
kubectl apply -f pod2-1.yaml

kubectl get pod --show-labels
kubectl get pod -l [labels]
kubectl describe pod [pod name]
kubectl delete -f [yaml file name]
kubectl get node --show-labels
gcloud --project [project ID] beta container operations list
kubectl scale --replicas=6 -f nginx_1.7.yaml

